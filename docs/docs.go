// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-01-09 14:00:21.318138423 +0000 GMT m=+0.014203767

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/api/users/create": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create a new user"
            }
        },
        "/api/users/deleteUser": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Deletes a user using a user id"
            }
        },
        "/api/users/getCurrentUser": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Attempts to get the currently logged in user using there session id."
            }
        },
        "/api/users/getUserById": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Attempts to get a existing user by id"
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Attempt to login using user details"
            }
        },
        "/api/users/updateUserDetails": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Updates a users details"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
