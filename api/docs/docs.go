// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-11-27 20:29:42.499958 +0000 GMT m=+0.055861701

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/api/users/assignUserCompany": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Updates a users company assignment"
            }
        },
        "/api/users/create": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create a new user"
            }
        },
        "/api/users/deleteUser": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Deletes a user using a user id"
            }
        },
        "/api/users/getAllCompanyUsers": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Attempts to get all users associated with a company."
            }
        },
        "/api/users/getAllSystemUsers": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Attempts to get all available users independent of company"
            }
        },
        "/api/users/getCurrentUser": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Attempts to get the currently logged in user using there session id."
            }
        },
        "/api/users/getUserById": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Attempts to get a existing user by id"
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Attempt to login using user details"
            }
        },
        "/api/users/updateUserDetails": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Updates a users details"
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
